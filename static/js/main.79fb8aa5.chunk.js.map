{"version":3,"sources":["components/CourseSearch/CourseSearch.tsx","components/CoursesTable/DayTag.tsx","lib/ical.ts","components/CoursesTable/DownloadButton.tsx","components/CoursesTable/CourseTable.tsx","config.ts","components/App/App.tsx","components/App/index.ts","hooks/useCourses.ts","reportWebVitals.ts","index.tsx"],"names":["Search","Input","CourseSearch","props","className","DayTag","day","rest","color","getColorFromDay","style","width","height","display","justifyContent","alignItems","textAlign","duration","t1","t2","m1","moment","m2","diff","minutes","get","hours","convertDayToMomentNumber","Error","convertDayToEnum","RRule","MO","TU","WE","TH","FR","SA","SU","firstDayAfterDate","fromDate","startTime","first","add","e","DownloadButton","course","handleClick","semester","getBoundingDatesForSemester","res","untilDate","title","department","section","times","instructors","time","eventConfigs","until","start_time","end_time","start","config","format","split","map","a","recurrenceRule","createRrule","status","join","description","organizer","name","email","push","createEvents","freq","WEEKLY","byweekday","toDate","toString","createICS","value","course_id","reg_id","replace","generateDownloadName","file","Blob","type","link","document","createElement","url","URL","createObjectURL","href","setAttribute","click","error","console","placement","shape","icon","CalendarFilled","onClick","tz","suppressDeprecationWarnings","Paragraph","Typography","CourseTable","courses","coursesWithKeys","i","key","renderName","trim","breakpoint","useBreakpoint","columns","dataIndex","responsive","render","text","record","sm","md","strong","length","instructor","direction","align","dataSource","apiUrl","App","useState","filteredCourses","setFilteredCourses","endpoint","setCourses","fetching","setFetching","setError","useEffect","fetch","then","response","json","catch","finally","useCourses","Header","padding","mode","selectable","backgroundColor","fontSize","margin","Item","Content","message","placeholder","enterButton","allowClear","size","onSearch","searchValue","filter","toLowerCase","includes","Boolean","loading","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79fb8aa5.chunk.js","sourcesContent":["import {Input} from 'antd';\n\nconst {Search} = Input;\n\nexport default function CourseSearch(props) {\n    return (\n        <div className=\"CourseSearch\">\n            <Search {...props} />\n        </div>\n    );\n}","import {Tag} from 'antd';\n\nexport default function DayTag({day, ...rest}) {\n    const getColorFromDay = (day) => {\n        switch (day) {\n        case 'SU':\n            return 'magenta';\n        case 'M':\n            return 'volcano';\n        case 'T':\n            return 'orange';\n        case 'W':\n            return 'green';\n        case 'TH':\n            return 'cyan';\n        case 'F':\n            return 'gold';\n        case 'SA':\n            return 'geekblue';\n        default:\n            return 'red';\n        }\n    };\n\n    return (\n        <Tag \n            color={getColorFromDay(day)} \n            {...rest} \n            style={{width: '1.8rem', height: '1.8rem', display: 'flex', justifyContent: 'center', alignItems: 'center', textAlign: 'center'}}\n        >{day}</Tag>\n    );\n\n}","import {RRule} from 'rrule';\nimport {createEvents, EventAttributes} from 'ics';\nimport {Course} from '../types/course';\nimport moment from 'moment-timezone';\n\n// See: https://momentjs.com/docs/#/use-it/node-js/\nmoment().tz('America/New_York').format();\n\n// See: https://github.com/moment/moment/issues/3488\nmoment.suppressDeprecationWarnings = true;\n\n/**\n * Returns the duration between $t1 and $t2\n * @param t1\n * @param t2\n */\nfunction duration(t1: string, t2: string): { minutes: number; hours: number } {\n    const m1 = moment(t1, 'HH:mm a');\n    const m2 = moment(t2, 'HH:mm a');\n    const duration = moment.duration(m2.diff(m1));\n    return {\n        minutes: duration.get('minutes'),\n        hours: duration.get('hours')\n    };\n}\n\n/**\n * Returns the moment numerical representation of $day\n * @note Sunday and Saturdays don't show up in the source JSON\n */\nexport function convertDayToMomentNumber(day: string) {\n    if (day === 'M') return 1;\n    if (day === 'T') return 2;\n    if (day === 'W') return 3;\n    if (day === 'TH') return 4;\n    if (day === 'F') return 5;\n    // keep these last since they are very unlikely to match true\n    if (day === 'S') return 6;\n    if (day === 'U') return 0;\n    // throw an error if the given day is invalid\n    throw new Error('Provided day is invalid');\n}\n\n/**\n * Returns the Rrule enum representation of $day\n * @note Sunday and Saturdays don't show up in the source JSON\n */\nexport function convertDayToEnum(day: string) {\n    if (day === 'M') return RRule.MO;\n    if (day === 'T') return RRule.TU;\n    if (day === 'W') return RRule.WE;\n    if (day === 'TH') return RRule.TH;\n    if (day === 'F') return RRule.FR;\n    // keep these last since they are very unlikely to match true\n    if (day === 'S') return RRule.SA;\n    if (day === 'U') return RRule.SU;\n    // throw an error if the given day is invalid\n    throw new Error('Provided day is invalid');\n}\n\n/**\n * Returns a DateArray representation of $time\n * @param time\n * @returns [number, number, number, number, number]\n */\nfunction formatStartTime(time: moment.Moment) {\n    const formatted = time.format('YYYY-M-D-H-m');\n    return formatted.split('-').map(a => +a)\n}\n\n/**\n * Returns the a moment object set to the first day $day that occurs after $fromDate.\n * @param fromDate\n * @param day\n * @param startTime\n */\nexport function firstDayAfterDate(fromDate: string, day: string, startTime: string): moment.Moment {\n    try {\n        let first = moment(`${fromDate} ${startTime}`, 'MM-DD-YYYY hh:mm a');\n        do first = first.add(1, 'days');\n        while (first.day() !== convertDayToMomentNumber(day));\n        return first;\n    } catch (e) {\n        throw e\n    }\n}\n\n/**\n * @param course - The course to create the ical file from\n * @param fromDate - Events start from this date. Format in MM/DD/YYYY\n * @param untilDate - Events end at this date. Format in MM/DD/YYYY\n */\nexport function createICS(\n    {title, department, section, times, instructors, ...rest}: Course,\n    fromDate: string,\n    untilDate: string\n) {\n\n    if (!times) return;\n\n    // placeholder for event configs\n    const eventConfigs: EventAttributes[] = [];\n\n    //const from = moment(fromDate);\n    const until = moment(untilDate);\n\n    function createRrule(day: string, until: moment.Moment) {\n        return new RRule({\n            freq: RRule.WEEKLY,\n            byweekday: convertDayToEnum(day),\n            until: until.toDate()\n        }).toString().split('RRULE:')[1];\n    }\n\n    // for each times in course.times[], we will need to create\n    // an ics event\n    for (const {day, start_time, end_time} of times) {\n\n        const start = firstDayAfterDate(fromDate, day, start_time);\n\n        // create the ics event\n        const config: EventAttributes = {\n            // @ts-ignore\n            start: formatStartTime(start),\n            duration: duration(start_time, end_time),\n            recurrenceRule: createRrule(day, until),\n            status: 'CONFIRMED',\n            title: [department, title, section].join(' '),\n            description: title,\n            // get the first instructor from the course\n            ...(instructors && {\n                organizer: {\n                    name: instructors[0].name,\n                    email: instructors[0].email\n                }\n            })\n        };\n        eventConfigs.push(config);\n\n    }\n\n    return createEvents(eventConfigs);\n}","import {Button, Tooltip} from 'antd';\nimport {CalendarFilled} from '@ant-design/icons';\nimport {createICS} from '../../lib/ical';\nimport {Course} from '../../types/course';\n\nfunction getBoundingDatesForSemester(course: Course) {\n    const semester = course.semester;\n    switch (semester) {\n    case 'fall_2021':\n        return ['08/30/2021', '12/18/2021'];\n    case 'spring_2022':\n        return ['01/18/2022', '04/29/2021'];\n    default:\n        throw new Error('Invalid semester provided.');\n    }\n}\n\nfunction generateDownloadName(course: Course) {\n    const {course_id, reg_id, semester} = course;\n    return `${[course_id, reg_id, semester.replace('_', '')].join('_')}`;\n}\n\nexport default function DownloadButton({course, ...rest}) {\n\n    const handleClick = (course: Course) => {\n\n        // Get the start and end dates for the semester.\n        const [start, end] = getBoundingDatesForSemester(course);\n\n        // Create the ics.\n        const res = createICS(course, start, end);\n\n        if (!res) {\n            throw new Error('No response received from ical generator');\n        }\n        // Download the ics.\n        if (res.value) {\n            const name = generateDownloadName(course);\n            const file = new Blob([res.value], {type: 'text/calendar'});\n            const link = document.createElement('a');\n            const url = URL.createObjectURL(file);\n            link.href = url;\n            link.setAttribute('download', name  + '.ics');\n            link.click();\n        } else if (res.error) {\n            console.error(res.error);\n        } else {\n            console.error('There was a problem generating iCal file');\n        }\n    }\n\n    return (\n        <Tooltip title=\"Download iCal for this course\" placement=\"left\">\n            <Button \n                type=\"primary\" \n                shape=\"circle\" \n                icon={<CalendarFilled />} \n                {...rest} \n                onClick={() => handleClick(course)}\n            />\n        </Tooltip>\n    );\n}","import {Course} from '../../types/course';\nimport {Table, Typography, Space} from 'antd';\nimport DayTag from './DayTag';\nimport DownloadButton from './DownloadButton';\nimport {Breakpoint} from 'antd/lib/_util/responsiveObserve';\nimport useBreakpoint from 'antd/lib/grid/hooks/useBreakpoint';\n\nconst {Paragraph} = Typography;\n\nexport default function CourseTable({courses, ...rest}) {\n\n    // antd requires each course to have a key.\n    const coursesWithKeys = courses.map((course, i) => ({key: i.toString(), ...course})) as Course[];\n  \n    // Shuffle around the instructor's name.\n    const renderName = name => {\n        const split =  name.split(',');\n        return split[1].trim() + ' ' + split[0].trim();\n    }\n\n    // Return a prettified semester name.\n    const renderSemester = semester => {\n        switch(semester) {\n        case 'fall_2021':\n            return 'Fall 2021';\n        default:\n            return semester;\n        }\n    }\n\n    // Grab the breakpoint so that we can conditionalize the table.\n    const breakpoint = useBreakpoint();\n\n    // Create the column definitions.\n    const columns = [\n        {\n            title: 'Registration Id',\n            dataIndex: 'reg_id',\n            key: 'reg_id',\n            responsive: ['lg'] as Breakpoint[]\n        },\n        {\n            title: 'Department',\n            dataIndex: 'department',\n            key: 'department',\n            responsive: ['lg'] as Breakpoint[]\n        },\n        {\n            title: 'Course',\n            dataIndex: 'title',\n            key: 'course',\n            render: (text, record) => {\n                const {title, instructors = [], times = [], reg_id} = record;\n                if (!breakpoint.sm) {\n                    return (\n                        <div>\n                            <Paragraph strong>{title}</Paragraph>\n                            <Paragraph>Registration Id<br/>{reg_id}</Paragraph>\n                            <Paragraph>Times{times.map((time, i) => (<div key={i}>{time.day} {time.start_time}-{time.end_time}</div>))}</Paragraph>\n                            {instructors.length > 0 && <Paragraph>Instructors{instructors.map((instructor, i) => (<div key={i}>{renderName(instructor.name)}</div>))}</Paragraph>}\n                        </div>\n                    );\n                } else if (!breakpoint.md) {\n                    return (\n                        <div>\n                            <Paragraph strong>{title}</Paragraph>\n                            <Paragraph>Registration Id<br/>{reg_id}</Paragraph>\n                            {instructors.length > 0 && <Paragraph>Instructors{instructors.map((instructor, i) => (<div key={i}>{renderName(instructor.name)}</div>))}</Paragraph>}\n                        </div>\n                    );\n                } else {\n                    return title;\n                }\n            },\n        },\n        {\n            title: 'Instructors',\n            dataIndex: 'instructors',\n            key: 'instructors',\n            render: instructors => {\n                if (instructors) {\n                    return (\n                        <Space direction=\"vertical\" align=\"center\">\n                            {instructors.map((instructor, i) => (\n                                <div key={i}>\n                                    <Paragraph>{renderName(instructor.name)}</Paragraph>\n                                    <Paragraph>{instructor.email}</Paragraph>\n                                </div>\n                            ))}\n                        </Space>\n                    );\n                } else {\n                    return '';\n                }\n            },\n            responsive: ['md'] as Breakpoint[]\n        },\n        {\n            title: 'Times',\n            dataIndex: 'times',\n            key: 'times',\n            render: times => {\n                if (times) {\n                    return (\n                        <Space direction=\"vertical\" align=\"center\">\n                            {times.map((time, i) => (\n                                <div key={i}>\n                                    <Paragraph style={{display: 'flex', alignItems: 'center'}}><DayTag day={time.day} />{time.start_time} - {time.end_time}</Paragraph>\n                                </div>\n                            ))}\n                        </Space>\n                    );\n                } else {\n                    return '';\n                }\n            },\n            responsive: ['sm'] as Breakpoint[]\n        },\n        {\n            title: 'Credits',\n            dataIndex: 'credits',\n            key: 'credits',\n            responsive: ['lg'] as Breakpoint[]\n        },\n        {\n            title: 'Semester',\n            dataIndex: 'semester',\n            key: 'semester',\n            render: renderSemester,\n            responsive: ['lg'] as Breakpoint[]\n        },\n        {\n            title: 'Action',\n            key: 'action',\n            render: (text, record) => {\n                return (\n                    <DownloadButton course={record} />\n                );\n            }\n        }\n    ];\n\n    return (\n        <div className=\"CourseTable\">\n            <Table dataSource={coursesWithKeys} columns={columns} {...rest} />\n        </div>\n    );\n}","const config = {\n    // The API url.\n    apiUrl: 'https://secure.swarthmore.edu/trico-course-guide/courses.json',\n    // The current semestesr.\n    semester: 'fall_2021'\n}\n\nexport default config;","import {useState} from 'react';\nimport {Layout, Menu, Alert} from 'antd';\nimport useCourses from '../../hooks/useCourses';\nimport CourseSearch from '../CourseSearch/CourseSearch';\nimport CourseTable from '../CoursesTable/CourseTable';\nimport {Course} from '../../types/course';\nimport config from '../../config';\n\nconst {apiUrl, semester} = config;\n\nexport default function App() {\n\n    // Keep track of the selected rows.\n    const [filteredCourses, setFilteredCourses] = useState<Course[]>([]);\n\n    const {courses, error, fetching} = useCourses(apiUrl);\n\n    const handleSearch = (searchValue) => {\n    // If the search value is empty, reset the state.\n        if (!searchValue) {\n            setFilteredCourses(\n                courses\n                    .filter(course => course.semester === semester)\n                    .filter(course => Boolean(course.times))\n            );\n            return;\n        }\n        // Filter the courses by the search value.\n        setFilteredCourses(\n            courses\n                .filter(course => course.title.toLowerCase().includes(searchValue.toLowerCase()))\n                .filter(course => course.semester === semester)\n                .filter(course => Boolean(course.times))\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <Layout>\n                <Layout.Header style={{padding:0}}>\n                    <Menu mode=\"horizontal\" selectable={false} style={{backgroundColor: '#631919', color: '#ffffff', fontSize: '1.5rem', margin: '0.25rem 0'}}>\n                        <Menu.Item key=\"1\">Course Search</Menu.Item>\n                    </Menu>\n                </Layout.Header>\n                <Layout.Content>\n                    {error && <Alert message={error} type=\"error\" />}\n                    <CourseSearch placeholder=\"Begin typing to filter courses\" enterButton=\"search\" allowClear size=\"large\" onSearch={handleSearch} />     \n                    <CourseTable \n                        courses={filteredCourses} \n                        loading={fetching}\n                    />\n                </Layout.Content>\n            </Layout>\n        </div>\n    );\n}","import App from './App';\nexport default App;","import {useState, useEffect} from 'react';\nimport {Course} from '../types/course';\n\nexport default function useCourses(endpoint: string) {\n    const [courses, setCourses] = useState<Course[]>([]);\n    const [fetching, setFetching] = useState(true);\n    const [error, setError] = useState(null);\n\n    // When the endpoint changes, get the new data.\n    useEffect(() => {\n        setFetching(true);\n        setError(null);\n        fetch(endpoint)\n            .then(response => response.json())\n            .then(json => {\n                setCourses(json)\n            })\n            .catch(error => setError(error))\n            .finally(() => {\n                setFetching(false);\n            });\n    }, [endpoint]);\n\n    return {fetching, courses, error};\n}","import {ReportHandler} from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}